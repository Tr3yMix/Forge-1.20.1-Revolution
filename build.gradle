

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0, 6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)



minecraft {

    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {

        configureEach {
            workingDirectory project.file('run')


            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"


            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {

            workingDirectory project.file("run")

            property 'mixin.debug', 'true'

            args '--mixin.config=mixins.revolution.json'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }


        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {

            workingDirectory project.file('run-data')


            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    flatDir{
        dirs 'libs'
    }
    maven{
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {url = "https://www.cursemaven.com"}
    maven {
        url = 'https://maven.isxander.dev/releases/'
    }
    maven {
        name = "JTDev-Maven-Repository"
        url = "https://maven.jt-dev.tech/releases"
        credentials{
            username = project.findProperty("gpr_user")
            password = project.findProperty("gpr_key")
        }
    }
    maven {
        name = "Sinytra"
        url = "https://maven.su5ed.dev/releases"
    }
    maven{url ="https://maven.quiltmc.org/repository/release"}
    maven { url = 'https://jitpack.io' }
    maven {
        name = "SpongePowered"
        url = "https://repo.spongepowered.org/maven"
    }
    maven{
        url = "https://maven.vram.io"
    }
    maven{
        url = "https://maven.shedaniel.me"
    }

    mavenCentral()
    mavenLocal()


}


dependencies {

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"


    implementation 'org.spongepowered:mixin:0.8.5'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:twigs-496913:4998195")
    implementation fg.deobf("curse.maven:sound-925889:5940443")
    implementation fg.deobf("curse.maven:immersive-weathering-forge-592449:6116941")
    implementation fg.deobf("curse.maven:hot-iron-1199047:6402869")



    runtimeOnly fg.deobf("curse.maven:selene-499980:6380635")
    runtimeOnly fg.deobf("curse.maven:mru-669659:5848512")
    runtimeOnly fg.deobf("curse.maven:yacl-667299:6336646")
    runtimeOnly fg.deobf("curse.maven:architectury-api-419699:5137938")
    runtimeOnly fg.deobf("curse.maven:thermal-cultivation-271835:5372746")
    runtimeOnly fg.deobf("curse.maven:cofh-core-69162:5374122")
    runtimeOnly fg.deobf("curse.maven:thermal-foundation-222880:5443583")
    runtimeOnly fg.deobf("curse.maven:simple-spears-877560:5546549")
    runtimeOnly fg.deobf("curse.maven:lets-do-farm-charm-1038103:6561948")
    runtimeOnly fg.deobf("curse.maven:simply-swords-659887:5639538")
    runtimeOnly fg.deobf("curse.maven:epic-knights-armor-and-weapons-509041:6373737")

    runtimeOnly fg.deobf("curse.maven:cloth-config-348521:5729105")

    runtimeOnly fg.deobf("curse.maven:item-obliterator-835861:5479898")
    runtimeOnly fg.deobf("curse.maven:necronomicon-586157:5772681")


    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
}

mixin {
    add sourceSets.main, 'mixins.revolution.refmap.json'

    config 'mixins.revolution.json'
}


tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range, spearsmod_version_range: spearsmod_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }

}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

jar{
    destinationDirectory = file("C:/Users/treyh/curseforge/minecraft/Instances/MC Revolution 0.1a/mods")
}






