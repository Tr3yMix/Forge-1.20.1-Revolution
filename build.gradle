
plugins {
    id 'maven-publish'
    id 'dev.architectury.loom' version "1.10-SNAPSHOT"

}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

loom {
    silentMojangMappingsLicense()

    forge{
        mixinConfig 'mixins.revolution.json'
    }


}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html#sub:flat_dir_resolver

    flatDir{
        dirs 'libs'
    }

    maven{
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {url = "https://www.cursemaven.com"}

    maven { url = "https://maven.su5ed.dev/releases"}

    maven {
        name = "JTDev-Maven-Repository"
        url = "https://maven.jt-dev.tech/releases"
        credentials{
            username = project.findProperty("gpr_user")
            password = project.findProperty("gpr_key")
        }

    }

    mavenCentral()
    mavenLocal()


}


dependencies {

    minecraft "net.minecraft:minecraft:$project.minecraft_version"
    mappings loom.officialMojangMappings()
    forge "net.minecraftforge:forge:$project.forge_version"

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1"))
    implementation(include("io.github.llamalad7:mixinextras-forge:0.4.1"))
    modImplementation 'org.antlr:antlr4-runtime:4.10.1'

    modImplementation("curse.maven:twigs-496913:4998195")
    modImplementation("curse.maven:sound-925889:5940443")
    modImplementation("curse.maven:immersive-weathering-forge-592449:6116941")

    modRuntimeOnly("curse.maven:selene-499980:6380635")
    modRuntimeOnly("curse.maven:mru-669659:5848512")
    modRuntimeOnly("curse.maven:yacl-667299:6336646")
    modRuntimeOnly("curse.maven:architectury-api-419699:5137938")
    modRuntimeOnly("curse.maven:falling-tree-349559:5010620")
    modRuntimeOnly("curse.maven:embeddium-908741:5681725")
    modRuntimeOnly("curse.maven:oculus-581495:6020952")
    modRuntimeOnly("curse.maven:euphoria-patches-915902:6137786")
    modRuntimeOnly("curse.maven:betterf3-401648:4863626")
    modRuntimeOnly("curse.maven:wakes-reforged-1223529:6366137")
    modRuntimeOnly("curse.maven:cloth-config-348521:5729105")
    modRuntimeOnly("curse.maven:bobby-reforged-883502:4650227")
    modRuntimeOnly("curse.maven:starlight-forge-526854:4631193")
    modRuntimeOnly("curse.maven:raised-570368:5849491")
    modRuntimeOnly("curse.maven:item-obliterator-835861:5479898")
    modRuntimeOnly("curse.maven:necronomicon-586157:5772681")
    modRuntimeOnly("curse.maven:tectonic-686836:5676419")
    modRuntimeOnly("curse.maven:naturalist-627986:6322818")
    modRuntimeOnly("curse.maven:alexs-mobs-426558:5698791")
    modRuntimeOnly("curse.maven:citadel-331936:6002521")
    modRuntimeOnly("curse.maven:terralith-513688:5512076")
    modRuntimeOnly("curse.maven:midnightlib-488090:4980331")
    modRuntimeOnly("curse.maven:simple-spears-877560:5546549")
    modRuntimeOnly("curse.maven:better-combat-by-daedelus-639842:5625757")
    modRuntimeOnly("curse.maven:playeranimator-658587:4587214")
    modRuntimeOnly("curse.maven:epic-knights-armor-and-weapons-509041:6373737")
    modRuntimeOnly("curse.maven:geckolib-388172:6333474")
    modRuntimeOnly("curse.maven:terrablender-563928:6290448")

    // compile against the JEI API but do not include it at runtime
    modCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnly("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    // at runtime, use the full JEI jar for Forge
    modRuntimeOnly("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")


}


processResources {
    // Make sure Gradle tracks changes to all these properties for incremental build
    inputs.property 'mod_id', project.mod_id
    inputs.property 'mod_version', project.mod_version
    inputs.property 'mod_name', project.mod_name
    inputs.property 'mod_license', project.mod_license
    inputs.property 'mod_group_id', project.mod_group_id
    inputs.property 'forge_version_range', project.forge_version_range
    inputs.property 'loader_version_range', project.loader_version_range
    inputs.property 'minecraft_version_range', project.minecraft_version_range
    inputs.property 'mod_authors', project.mod_authors
    inputs.property 'mod_description', project.mod_description
    // Add any other variables you use in your mods.toml

    filesMatching('META-INF/mods.toml') {
        expand(
                mod_id: project.mod_id,
                mod_version: project.mod_version,
                mod_name: project.mod_name,
                mod_license: project.mod_license,
                mod_group_id: project.mod_group_id,
                forge_version_range: project.forge_version_range,
                loader_version_range: project.loader_version_range,
                minecraft_version_range: project.minecraft_version_range,
                mod_authors: project.mod_authors,
                mod_description: project.mod_description
        )
    }
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}


publishing {
    publications {
        mavenJava(MavenPublication){
            from components.java
        }
    }

    repositories {

    }
}






